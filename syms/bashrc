#!/usr/bin/env bash
# :set fdm=marker
# :set tw=79
# https://github.com/sempervent/dotfiles
###############################################################################
# resolve to all symlinks the source directory
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
	DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
	SOURCE="$(readlink "$SOURCE")"
	[[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" 
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
SRC_DIR=$HOME

# give me trusty vim commands
set -o vi
set show-mode-in-prompt on

if [ -e /usr/share/terminfo/x/xterm-256color ]; then
  export TERM='xterm-256color'
else
  export TERM='xterm-color'
fi

# General Settings {{{1
# if not running interactively, don't do anything {{{2
case $- in
   *i*) ;;
      *) return;;
esac # 2}}}
# start tmux if running interactively {{{2
if [ -x "$(which tmux)" ]; then
  if [[ -z "$TMUX" ]] ;then
    # get the id of a deattached session
      ID="$( tmux ls | grep -vm1 attached | cut -d: -f1 )"
      if [[ -z "$ID" ]] ;then # if not available create a new one
          tmux new-session
      else
          tmux attach-session -t "$ID" # if available attach to it
      fi
  fi 
fi # 2}}}
# autocomplete with sudo {{{2
if [ "$PS1" ]; then
   complete -cf sudo
fi
# enable bash completion if it exists
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
# correct minor spelling errors in cd
shopt -s cdspell
# include dotfiles in wildcard expansion and match case-insensitively
shopt -s dotglob
shopt -s nocaseglob
# 2}}}
# check the window after each command and update
# values of LINES and COLUMNS
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
# 1}}}
# Path {{{1
#-----------------------------------
export PATH="$PATH:/home/$(whoami)/scripts:$JAVA_HOME/bin:/home/$(whoami)/.local/bin"
export EDITOR='vim'
# 1}}}
# exported options {{{1
if [[ "$(uname -s)" =~ 'Darwin' ]]; then
	echo 'Running in MacOS'
	OS='Mac'
elif [[ "$(uname -a)" =~ 'CYGWIN' ]]; then
	echo 'Running in CYGWIN'
	OS='Win'
else
	echo 'Running in *nix'
	OS='Nix'
	export LS_OPTS='--color=auto'
fi
export OS
# 1}}}
# Aesthetics {{{1
# set variable identifying the chroot you work in {{{2
# 2}}}
# colors {{{2
force_color_prompt=yes
# 2}}}
# 1}}}
# Prompt, Greeting, etc {{{1
# Imports {{{1 
source "$SRC_DIR/dots/bash/aliases.sh"
source "$SRC_DIR/dots/bash/colors.sh"
source "$SRC_DIR/dots/bash/completion.sh"
source "$SRC_DIR/dots/bash/exports.sh"
source "$SRC_DIR/dots/bash/history.sh"
source "$SRC_DIR/dots/bash/functions.sh"
source "$SRC_DIR/dots/bash/prompt.sh"
# 2}}}
# Prompt {{{2
#PS1="\[\n$NC\]┌──┤\[$GREEN\]\u\[$NC\]@\[$BLUE\]\h\[$NC\]├─┤\[$BPURP\]\@\[$NC\]├─┤\[$CYAN\]\d\[$NC\]├$(render_git_info)$NC\]│\n├───┤jobs \[$CYAN\](\j)\[$NC\]├─┤\n└─┤\[$YELLOW\]\w\[$NC\]│ "
# 2}}}
# greeting {{{2
echo "Welcome, $(whoami)!"
if [ -x "$(which fortune || exit)" ]; then
  if [ -x "$(which cowsay || exit)" ]; then
    if [ -x "$(which lolcat || exit)" ]; then
      fortune | cowsay | lolcat
    else
      fortune | cowsay
    fi
  else
    fortune
  fi
fi
# 2}}}
