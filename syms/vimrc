"~/.vimrc
" vundle settings {{{1
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'dense-analysis/ale'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'jistr/vim-nerdtree-tabs'
if executable('fzf')
	Plugin 'junegun/fzf'
else
	Plugin 'ctrlpvim/ctrlp.vim'
endif
Plugin 'tpope/vim-fugitive'
Plugin 'vim-syntastic/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'python-mode/python-mode'
Plugin 'derekwyatt/vim-scala'
Plugin 'ktvoelker/sbt-vim'
Plugin 'davidhalter/jedi-vim'
Plugin 'chrisbra/csv.vim'

call vundle#end()
" 1}}}
" general settings {{{1
filetype plugin indent on
syntax on
set hidden
set wildmenu
set showcmd
set t_Co=256
" search commands {{{2
set hlsearch
set incsearch " 2}}}
set more
set history=10000
set autoread
set fdm=marker
set tabstop=2 shiftwidth=2 softtabstop=0 noexpandtab smarttab
set so=7
set wildmenu
set backspace=eol,start,indent
set cc=80
set whichwrap=<,>,h,l
set ignorecase
set smartcase
set hlsearch
set incsearch
set lazyredraw
set magic
set showmatch
set mat=2
set noerrorbells
set novisualbell
set t_vb=
set tm=500
set foldcolumn=1
# don't have a swap
set noswapfile
set number
set ruler
set autoindent
set matchtime=2
set cmdheight=2
set notimeout ttimeout ttimeoutlen=200
syntax enable
set background=dark
set encoding=utf8
set splitbelow
set splitright
set fdm=marker
set foldlevel=99
try
	colorscheme molokai
catch
endtry
" tab settings {{{2
set tabstop=2
set shiftwidth=2
set expandtab
" 2}}}
set ffs=unix,dos,mac
" mappings {{{1 --------------------------------------------------------------
let mapleader=','
imap jj <ESC>
imap kk <ESC>
noremap j gj
noremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <space> za
nmap <leader>w :w!<cr>
command W w !sudo tee % > /dev/null
" 1}}} -----------------------------------------------------------------------
" file specific bindings {{{1 ------------------------------------------------
" python specific things {{{2 ------------------------------------------------
au BufNewFile,BufRead *.py
	\ set tabstop=4 |
	\ set softtabstop=4 |
	\ set shiftwidth=4 |
	\ set textwidth=79 |
	\ set expandtab |
	\ set autoindent |
	\ set fileformat=unix |
  \ set fdm=indent
" 2}}} -----------------------------------------------------------------------
" R specific settings {{{1 ---------------------------------------------------
au BufNewFile,BufRead *.R
	\ set tabstop=2 |
	\ set softtabstop=2 |
	\ set shiftwidth=2 |
	\ set autoindent |
	\ set expandtab |
	\ set fileformat=unix
" 2}}} -----------------------------------------------------------------------
" 1}}}------------------------------------------------------------------------
" plugin settings {{{1 -------------------------------------------------------
" python related {{{2 --------------------------------------------------------
let python_highlight_all=1
let g:pymode_python = 'python3'
let g:pymode_indent = 1
let g:pymode_lint = 1
let g:pymode_lint_on_write = 1
let g:pymode_lint_message = 1
let g:pymode_lint_checkers = ['pep8', 'pyflakes', 'pep257', 'pylint']
let g:pymode_syntax = 1
let g:flake8_ignore='D213'
" jedi {{{2 ------------------------------------------------------------------
let g:jedi#force_py_version = 3
let g:jedi#completions_command = "<C-N>"
" 2 }}} ----------------------------------------------------------------------
" 2}}} -----------------------------------------------------------------------
" scala related {{{2 ---------------------------------------------------------
let g:scala_scaladoc_indent = 1
" 2}}} -----------------------------------------------------------------------
" file search settings {{{2 --------------------------------------------------
if executable('rg')
	let $FZF_DEFAULT_COMMAND = 'rg --files --no-messages "" .'
endif
let g:gzg_command_prefix = 'Fzf'
if executable('fzf')
	nnoremap <leader>v :FzfFiles<cr>
	nnoremap <leader>u :FzfTags<cr>
	nnoremap <leader>j :call fzf#vim#tags("'".expand('<cword>'))<cr>
else
	nnoremap <leader>v :Ctrlp<space><cr>
endif
" 2}}} -----------------------------------------------------------------------
" 1}}} -----------------------------------------------------------------------
